name: Deploy to Amazon ECR

on:
  workflow_run:
    workflows:
        - "Run Tests"
    types:
      - completed
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: 'us-east-1'
  ECR_REPOSITORY: 'dream'

jobs:
  determine-tag:
    name: Determine Docker Image Tag
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-tag.outputs.image-tag }}
    steps:
      - name: Set Image Tag
        id: set-tag
        run: |
          run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ];; then 
            echo "::set-output name=image-tag::latest"; 
          else echo "::set-output name=image-tag::${{ github.sha }}"; 
          fi


  build-and-deploy:
    name: Deploy
    needs: determine-tag
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Tag & Push to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ needs.determine-tag.outputs.image-tag }}
        run: |
          docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT